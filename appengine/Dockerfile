# Base Dockerfile for an App Engine Ruby runtime.
# Dockerfiles generated by the gcloud tool inherit FROM this image.

FROM gcr.io/google_appengine/base

# Install dependencies for Ruby
# Also installs dependencies for the following common gems:
# nokogiri, sqlite3, mysql2, pg
RUN apt-get update -y && \
    apt-get install -y -q --no-install-recommends \
        autoconf \
        build-essential \
        ca-certificates \
        curl \
        git \
        libffi-dev \
        libgdbm-dev \
        libgmp-dev \
        libncurses5-dev \
        libqdbm-dev \
        libreadline6-dev \
        libssl-dev \
        libyaml-dev \
        libz-dev \
        libxml2-dev \
        libsqlite3-dev \
        libmysqlclient-dev \
        libpq-dev \
        systemtap && \
    apt-get clean && \
    rm /var/lib/apt/lists/*_*

# Install node
RUN mkdir /nodejs && curl https://nodejs.org/dist/v4.1.2/node-v4.1.2-linux-x64.tar.gz | tar xvzf - -C /nodejs --strip-components=1
ENV PATH /nodejs/bin:$PATH

# Install rbenv
ENV RBENV_ROOT /rbenv
RUN git clone https://github.com/sstephenson/rbenv.git /rbenv && \
    git clone https://github.com/sstephenson/ruby-build.git /rbenv/plugins/ruby-build
ENV PATH /rbenv/shims:/rbenv/bin:$PATH

# Preinstall ruby runtimes.
# The LAST version in the list is set as the default.
ENV PREINSTALLED_RUBY_VERSIONS 2.0.0-p647 2.1.7 2.2.3
RUN for V in $PREINSTALLED_RUBY_VERSIONS; do \
    rbenv install $V; \
    rbenv rehash; \
    rbenv global $V; \
    done

# Preinstall bundler and foreman gems
ENV BUNDLER_VERSION 1.10.6
ENV FOREMAN_VERSION 0.78.0
RUN for V in $PREINSTALLED_RUBY_VERSIONS; do \
    RBENV_VERSION=$V gem install -q --no-rdoc --no-ri bundler --version $BUNDLER_VERSION; \
    RBENV_VERSION=$V gem install -q --no-rdoc --no-ri foreman --version $FOREMAN_VERSION; \
    rbenv rehash; \
    done

# Common configuration for any ENTRYPOINT
WORKDIR /app
EXPOSE 8080
ENV PORT 8080
CMD []

# Default ENTRYPOINT
ENV RACK_HANDLER webrick
ENV RACK_ENV production
ENTRYPOINT bundle exec rackup -p $PORT /app/config.ru -s $RACK_HANDLER -E $RACK_ENV
